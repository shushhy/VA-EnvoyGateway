admin:
    address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
    listeners:
        - name: listener_1
          address:
              socket_address: { address: 0.0.0.0, port_value: 8001 }
          filter_chains:
              - filters:
                    - name: envoy.filters.network.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                          stat_prefix: ingress_http
                          http_filters:
                              - name: envoy.filters.http.router
                          access_log:
                              - name: envoy.file_access_log
                                typed_config:
                                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                                    log_format:
                                        text_format: "[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL% %RESPONSE_CODE% %UPSTREAM_HOST% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% %REQ(X-FORWARDED-FOR)% %REQ(USER-AGENT)%\n"
                                        content_type: "text/html; charset=UTF-8"
                                    path: "/tmp/access.log"
                          #   access_log:
                          #       - name: envoy.access_loggers.file
                          #         typed_config:
                          #             "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                          #             config:
                          #                 json_format:
                          #                     start_time: "[%START_TIME%]"
                          #                     protocol: "%PROTOCOL%"
                          #                     route_name: "%ROUTE_NAME%"
                          #                     upstream_host: "%UPSTREAM_HOST"
                          #                 path: "/tmp/envoy.log"
                          route_config:
                              name: local_route
                              virtual_hosts:
                                  - name: local_service
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/weather" }
                                          route:
                                              {
                                                  prefix_rewrite: "/weatherforecast",
                                                  cluster: simple_service,
                                              }
        - name: listener_0
          address:
              socket_address: { address: 0.0.0.0, port_value: 8000 }
          filter_chains:
              - filters:
                    - name: envoy.filters.network.tcp_proxy
                      typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                          stat_prefix: tcp_proxy
                          cluster: wsorg_service
                          access_log:
                              - name: envoy.access_loggers.stdout
                                typed_config:
                                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
        #   route_config:
        #   name: local_route
        #   virtual_hosts:
        #       - name: local_service
        #         domains: ["*"]
        #         # retry policy applied to all routes, note: route specific retry policy will overwrite the global configuration
        #         routes:
        #             - match: { prefix: "/" }
        #               route:
        #                   cluster: simple_service
        #   http_filters:
        #       - name: envoy.filters.http.router
        #   transport_socket:
        #       name: envoy.transport_sockets.tls
        #       typed_config:
        #           "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        #           cmmon_tls_context:
        #               tls_certificates:
        #                   certificate_chain:
        #                       { filename: "OSSApi.pfx" }
        #                   private_key:
        #                       { filename: "secrets.json" }
        #               alpn_protocols: ["h2,http/1.1"]

    clusters:
        - name: simple_service
          connect_timeout: 1s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
              cluster_name: weather_service
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: simpleapi
                                      port_value: 80
                        - endpoint:
                              address:
                                  socket_address:
                                      address: simple
                                      port_value: 80
        # - name: wsorg_service
        #   connect_timeout: 1s
        #   type: LOGICAL_DNS
        #   lb_policy: ROUND_ROBIN
        #   load_assignment:
        #       cluster_name: wsorg_service
        #       endpoints:
        #           - lb_endpoints:
        #                 - endpoint:
        #                       address:
        #                           socket_address:
        #                               address: echo.websocket.org
        #                               port_value: 443
        # - name: ossapi_service
        #   connect_timeout: 1s
        #   type: STRICT_DNS
        #   lb_policy: ROUND_ROBIN
        #   load_assignment:
        #       cluster_name: ossapi_service
        #       endpoints:
        #           - lb_endpoints:
        #                 - endpoint:
        #                       address:
        #                           socket_address:
        #                               address: ossapi
        #                               port_value: 443
